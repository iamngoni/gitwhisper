name: Build and Release GitWhisper

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: gitwhisper
            archive: gitwhisper-linux.tar.gz
          - os: macos-latest
            target: gitwhisper
            archive: gitwhisper-macos.tar.gz
          - os: windows-latest
            target: gitwhisper.exe
            archive: gitwhisper-windows.tar.gz

    steps:
      - uses: actions/checkout@v3

      - uses: dart-lang/setup-dart@v1
      - run: dart pub get

      - name: Install yq
        uses: mikefarah/yq@master

      - name: Compile binary
        run: dart compile exe bin/main.dart -o ${{ matrix.target }} -DAPP_VERSION=$(yq '.version' pubspec.yaml)

      - name: Archive binary
        run: tar -czf ${{ matrix.archive }} ${{ matrix.target }}

      - name: Calculate sha256 (Linux/macOS)
        id: hash_unix
        if: runner.os != 'Windows'
        run: echo "sha256=$(shasum -a 256 ${{ matrix.archive }} | cut -d ' ' -f1)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Calculate sha256 (Windows)
        id: hash_win
        if: runner.os == 'Windows'
        run: |
          $hash = Get-FileHash ${{ matrix.archive }} -Algorithm SHA256
          echo "sha256=$($hash.Hash)" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            gitwhisper-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish .deb to APT repo
        if: runner.os == 'Linux'
        run: |
          version=${GITHUB_REF_NAME#v}

          mkdir -p deb/usr/local/bin
          cp gitwhisper deb/usr/local/bin/
          ln -s /usr/local/bin/gitwhisper deb/usr/local/bin/gw

          mkdir -p deb/DEBIAN
          cat <<EOF > deb/DEBIAN/control
          Package: gitwhisper
          Version: ${version}
          Section: utils
          Priority: optional
          Architecture: amd64
          Maintainer: Ngonidzashe Mangudya <you@example.com>
          Description: AI-assisted Git commit CLI. Includes both `gitwhisper` and `gw` commands.
          EOF

          dpkg-deb --build deb
          mv deb.deb gitwhisper_${version}_amd64.deb

          # Clone and update APT repo
          git clone --depth=1 --branch=gh-pages https://github.com/iamngoni/gitwhisper-apt apt-repo
          cd apt-repo

          mkdir -p pool/main/g/gitwhisper
          mkdir -p dists/stable/main/binary-amd64
          cp ../gitwhisper_${version}_amd64.deb pool/main/g/gitwhisper/

          dpkg-scanpackages pool /dev/null > dists/stable/main/binary-amd64/Packages
          gzip -kf dists/stable/main/binary-amd64/Packages

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Publish gitwhisper ${version}"
          git push https://x-access-token:${{ secrets.HOMEBREW_TAP_PAT }}@github.com/iamngoni/gitwhisper-apt gh-pages

  update-homebrew:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    needs: build
    steps:
      - name: Clone and update formula
        run: |
          git clone https://github.com/iamngoni/homebrew-gitwhisper.git
          cd homebrew-gitwhisper
          curl -LO https://github.com/iamngoni/gitwhisper/releases/download/${{ github.ref_name }}/gitwhisper-macos.tar.gz
          sha256=$(shasum -a 256 gitwhisper-macos.tar.gz | cut -d ' ' -f1)

          echo "class Gitwhisper < Formula" > Formula/gitwhisper.rb
          echo "  desc \"AI-assisted git commit CLI\"" >> Formula/gitwhisper.rb
          echo "  homepage \"https://github.com/iamngoni/gitwhisper\"" >> Formula/gitwhisper.rb
          echo "  url \"https://github.com/iamngoni/gitwhisper/releases/download/${{ github.ref_name }}/gitwhisper-macos.tar.gz\"" >> Formula/gitwhisper.rb
          echo "  sha256 \"$sha256\"" >> Formula/gitwhisper.rb
          echo "  version \"${{ github.ref_name }}\"" >> Formula/gitwhisper.rb
          echo "" >> Formula/gitwhisper.rb
          echo "  def install" >> Formula/gitwhisper.rb
          echo "    bin.install \"gitwhisper\"" >> Formula/gitwhisper.rb
          echo "    bin.install_symlink \"gitwhisper\" => \"gw\"" >> Formula/gitwhisper.rb
          echo "  end" >> Formula/gitwhisper.rb
          echo "end" >> Formula/gitwhisper.rb

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add Formula/gitwhisper.rb
          git commit -m "Update formula to ${{ github.ref_name }}"
          git push https://x-access-token:${{ secrets.HOMEBREW_TAP_PAT }}@github.com/iamngoni/homebrew-gitwhisper HEAD:main
